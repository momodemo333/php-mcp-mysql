name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3']

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: testroot
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 33306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: pdo, pdo_mysql, mbstring
        coverage: xdebug
        tools: composer

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ hashFiles('composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-${{ matrix.php-version }}-
          ${{ runner.os }}-composer-

    - name: Install dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader

    - name: Wait for MySQL
      run: |
        timeout 60 bash -c 'until mysqladmin ping -h 127.0.0.1 -P 33306 -u root -ptestroot; do sleep 2; done'

    - name: Setup MySQL test data
      run: |
        mysql -h 127.0.0.1 -P 33306 -u root -ptestroot < tests/fixtures/test-data.sql

    - name: Build Codeception
      run: vendor/bin/codecept build

    - name: Run tests
      env:
        MYSQL_HOST: 127.0.0.1
        MYSQL_PORT: 33306
        MYSQL_USER: testuser
        MYSQL_PASS: testpass
        MYSQL_DB: testdb
        ALLOW_INSERT_OPERATION: true
        ALLOW_UPDATE_OPERATION: true
        ALLOW_DELETE_OPERATION: true
        ALLOW_TRUNCATE_OPERATION: true
        ALLOW_DDL_OPERATIONS: true
        ALLOW_ALL_OPERATIONS: false
        MAX_RESULTS: 1000
        QUERY_TIMEOUT: 30
        LOG_LEVEL: ERROR
      run: |
        # Tests unitaires
        vendor/bin/codecept run unit --coverage --coverage-xml
        
        # Tests d'intÃ©gration
        vendor/bin/codecept run integration --coverage --coverage-xml

    - name: Upload coverage reports to Codecov
      if: matrix.php-version == '8.1'
      uses: codecov/codecov-action@v3
      with:
        files: tests/_output/coverage.xml
        fail_ci_if_error: false

    - name: Generate coverage report
      if: matrix.php-version == '8.1'
      run: vendor/bin/codecept run --coverage --coverage-html

    - name: Upload coverage artifacts
      if: matrix.php-version == '8.1'
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage/

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
        extensions: pdo, pdo_mysql, mbstring

    - name: Install dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader

    - name: Check PHP syntax
      run: |
        find src tests -name "*.php" -exec php -l {} \;

    - name: Validate composer.json
      run: composer validate --strict

  docker-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
        extensions: pdo, pdo_mysql, mbstring

    - name: Install dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader

    - name: Build Codeception
      run: vendor/bin/codecept build

    - name: Run Docker tests
      run: |
        chmod +x tests/scripts/docker-test-complete.sh
        ./tests/scripts/docker-test-complete.sh -v

    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: tests/reports/